<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="MpProjectNuGet" DependsOnTargets="EnsureMpProjectNuGetFolders;GenerateMpProjectNuGetPropsTemplate;CreateMpProjectNuGetArtifacts;GenerateMpProjectNuGetNuSpec;UpdateMpProjectNuGetNuSpecDependencies;CreateMpProjectNuGetTools" AfterTargets="MpPackage" />
  <PropertyGroup>
    <XmlDocumentSeed>&lt;?xml version="1.0" encoding="utf-8" ?&gt;&lt;placeholder/&gt;</XmlDocumentSeed>
  </PropertyGroup>
  <Target Name="EnsureMpProjectNuGetFolders">
    <PropertyGroup>
      <NuGetTargetFramework Condition=" '$(NuGetTargetFramework)' == '' ">$(MpFrameworkIdentifier)</NuGetTargetFramework>
      <NuGetId>$(ManagementPackName)</NuGetId>
      <MpAlias>$(RootNamespace)</MpAlias>
      <MpAlias Condition="$(RootNamespace.Contains('.'))">$(RootNamespace.Substring($([MSBuild]::Add($(RootNamespace.LastIndexOf('.')), 1))))</MpAlias>
      <NuGetVersion>%(EffectiveMpVersion.Version)</NuGetVersion>
      <NuGetTitle>$(Name)</NuGetTitle>
      <NuGetFolder>$(OutputPath)..\..\NuGet\</NuGetFolder>
      <NuGetLibFolder>$(NuGetFolder)lib\</NuGetLibFolder>
      <NuGetLibFrameworkFolder>$(NuGetLibFolder)$(NuGetTargetFramework)\</NuGetLibFrameworkFolder>
      <NuGetBuildFolder>$(NuGetFolder)build\</NuGetBuildFolder>
      <NuGetToolsFolder>$(NuGetFolder)tools\</NuGetToolsFolder>
      <NuSpecFilePath>$(NuGetFolder)$(NuGetId).nuspec</NuSpecFilePath>
      <PropsFilePath>$(NuGetBuildFolder)$(NuGetId).props</PropsFilePath>
      <InstallFilePath>$(NuGetToolsFolder)install.ps1</InstallFilePath>
      <UninstallFilePath>$(NuGetToolsFolder)uninstall.ps1</UninstallFilePath>
      <PackagesFilePath>$(MSBuildProjectDirectory)\packages.config</PackagesFilePath>
    </PropertyGroup>
    <Message Text="Ensuring NuGet artfact folders for $(NuGetId)." Importance="high" />
    <MakeDir Directories="$(NuGetFolder)" />
    <MakeDir Directories="$(NuGetLibFolder)" />
    <MakeDir Directories="$(NuGetLibFrameworkFolder)" />
    <MakeDir Directories="$(NuGetBuildFolder)" />
    <MakeDir Directories="$(NuGetToolsFolder)" />
  </Target>
  <Target Name="CreateMpProjectNuGetArtifacts">
    <Message Text="Starting NuGet artfact creation for $(NuGetId)." Importance="high" />
    <Copy SourceFiles="$(PackagedMp)" DestinationFolder="$(NuGetLibFrameworkFolder)" />
  </Target>
  <Target Name="GenerateMpProjectNuGetPropsTemplate">
    <Message Text="Generating NuGet props template for $(NuGetId)." Importance="high" />
    <PropertyGroup>
      <PropsContent>
        <Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
          <ItemGroup>
            <ManagementPackReference Include="$(NuGetId)">
              <HintPath>..\packages\$(NuGetId).$(NuGetVersion)\lib\$(NuGetTargetFramework)\$(NuGetId).mpb</HintPath>
              <Alias>$(MpAlias)</Alias>
              <MinVersion>$(NuGetVersion)</MinVersion>
            </ManagementPackReference>
          </ItemGroup>
        </Project>
      </PropsContent>
    </PropertyGroup>
    <WriteLinesToFile File="$(PropsFilePath)" Lines="$(XmlDocumentSeed)" Overwrite="true" Condition="!Exists($(PropsFilePath))" />
    <PropertyGroup>
      <BuildNsPrefix>build</BuildNsPrefix>
      <BuildNamespaces>&lt;Namespace Prefix='$(BuildNsPrefix)' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;</BuildNamespaces>
    </PropertyGroup>
    <XmlPoke XmlInputPath="$(PropsFilePath)" Query="/" Namespaces="$(BuildNamespaces)" Value="$(PropsContent)" />
  </Target>
  <Target Name="GenerateMpProjectNuGetNuSpec">
    <Message Text="Generating NuSpec for $(NuGetId)." Importance="high" />
    <PropertyGroup>
      <ShouldSeedSpec>false</ShouldSeedSpec>
      <ShouldSeedSpec Condition="!Exists($(NuSpecFilePath))">true</ShouldSeedSpec>
      <NuSpecContent>
        <package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
          <metadata>
            <id>placeholder text</id>
            <version>placeholder text</version>
            <authors>$(NuGetTitle) Authors</authors>
            <title>$(NuGetTitle)</title>
            <requireLicenseAcceptance>false</requireLicenseAcceptance>
            <description>$(NuGetTitle)</description>
            <tags>$(NuGetTargetFramework)</tags>
            <dependencies>
              <!-- no dependencies -->
            </dependencies>
          </metadata>
        </package>
      </NuSpecContent>
    </PropertyGroup>
    <WriteLinesToFile File="$(NuSpecFilePath)" Lines="$(XmlDocumentSeed)" Overwrite="true" Condition="$(ShouldSeedSpec)" />
    <PropertyGroup>
      <NuSpecNsPrefix>nuspec</NuSpecNsPrefix>
      <NuSpecNamespaces>&lt;Namespace Prefix='$(NuSpecNsPrefix)' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'/&gt;</NuSpecNamespaces>
      <NuSpecIdQuery>/$(NuSpecNsPrefix):package/$(NuSpecNsPrefix):metadata/$(NuSpecNsPrefix):id</NuSpecIdQuery>
      <NuSpecVersionQuery>/$(NuSpecNsPrefix):package/$(NuSpecNsPrefix):metadata/$(NuSpecNsPrefix):version</NuSpecVersionQuery>
    </PropertyGroup>
    <!-- seed document, if needed -->
    <XmlPoke XmlInputPath="$(NuSpecFilePath)" Query="/" Namespaces="$(NuSpecNamespaces)" Value="$(NuSpecContent)" Condition="$(ShouldSeedSpec)" />
    <!-- update values -->
    <XmlPoke XmlInputPath="$(NuSpecFilePath)" Query="$(NuSpecIdQuery)" Namespaces="$(NuSpecNamespaces)" Value="$(NuGetId)" />
    <XmlPoke XmlInputPath="$(NuSpecFilePath)" Query="$(NuSpecVersionQuery)" Namespaces="$(NuSpecNamespaces)" Value="$(NuGetVersion)" />
  </Target>
  <Target Name="UpdateMpProjectNuGetNuSpecDependencies">
    <Message Text="Reading NuSpec dependencies for $(NuGetId)." Importance="high" />
    <CallTarget Targets="ReadMpProjectNuGetNuSpecDependencies" />
    <Message Text="Writing NuSpec dependencies for $(NuGetId)." Importance="high" />
    <CallTarget Targets="WriteMpProjectNuGetNuSpecDependencies" />
  </Target>
  <Target Name="ReadMpProjectNuGetNuSpecDependencies">
    <XmlPeek XmlInputPath="$(PackagesFilePath)" Query="/packages/package[@targetFramework='scmpinfra' and boolean(@developmentDependency)!='true']">
      <Output TaskParameter="Result" ItemName="NuGetPackageConfig" />
    </XmlPeek>
    <PropertyGroup>
      <NoDependencies>&lt;!-- no dependencies --&gt;</NoDependencies>
      <NuGetPackagesDelimited>@(NuGetPackageConfig)</NuGetPackagesDelimited>
      <NuGetDependencies Condition="'$(NuGetPackagesDelimited)'!=''">$(NuGetPackagesDelimited.Replace(';','').Replace("package","dependency").Replace(` targetFramework="scmpinfra"`,""))</NuGetDependencies>
      <NuGetDependencies Condition="'$(NuGetPackagesDelimited)'==''">$(NoDependencies)</NuGetDependencies>
    </PropertyGroup>
  </Target>
  <Target Name="WriteMpProjectNuGetNuSpecDependencies">
    <Message Text="$(NuGetDependencies)" Condition="'$(NuGetDependencies)'!='$(NoDependencies)'" Importance="high" />
    <PropertyGroup>
      <NewDependencyQuery>/$(NuSpecNsPrefix):package/$(NuSpecNsPrefix):metadata/$(NuSpecNsPrefix):dependencies</NewDependencyQuery>
    </PropertyGroup>
    <XmlPoke XmlInputPath="$(NuSpecFilePath)" Query="$(NewDependencyQuery)" Namespaces="$(NuSpecNamespaces)" Value="$(NuGetDependencies)" />
  </Target>
  <Target Name="CreateMpProjectNuGetTools">
    <Message Text="Generating scripts for $(NuGetId)." Importance="high" />
    <ItemGroup>
      <InstallLine Include="line01">
        <Text>param($installPath, $toolsPath, $package, $project)</Text>
      </InstallLine>
      <InstallLine Include="line02">
        <Text># if there isn't a project file, there is nothing to do</Text>
      </InstallLine>
      <InstallLine Include="line03">
        <Text>if (!$project) { return }</Text>
      </InstallLine>
      <InstallLine Include="line04">
        <Text># Prompt to reload the project to add/remove the new/old references</Text>
      </InstallLine>
      <InstallLine Include="line05">
        <Text>$project.Save($project.FullName)</Text>
      </InstallLine>
      <InstallLineText Include="%(InstallLine.Text)" />
    </ItemGroup>
    <WriteLinesToFile File="$(InstallFilePath)" Lines="@(InstallLineText)" Overwrite="true" />
    <WriteLinesToFile File="$(UninstallFilePath)" Lines="@(InstallLineText)" Overwrite="true" />
  </Target>
</Project>